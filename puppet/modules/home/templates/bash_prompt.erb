#!/bin/bash
# <%= puppet_header %>
# <%=  __FILE__.sub!(/.*?puppet\//,fqdn + ':') %>
# restore original term if its set to xterm-256, and save orig. term otherwise
# needed for sudo passing $TERM in env
# fixing centos 6 default crap
unalias -a
export SHELL=/bin/bash # mc fix
                       #
if [ $TERM = 'dumb' ] ; then
    # not a real term, dont bother with setting up env
    # cant just exit here because for some reason it fucks up scp to centos6
    echo -n ''
else

if [ $TERM = 'xterm-256color' ] ; then
    export TERM=$ORIGTERM
else
    export ORIGTERM=$TERM
fi

home_host_regex='(spare2|arkham|vm-debian|hydra)'
if [[ $HOSTNAME =~ $home_host_regex ]] ; then
    SHOW_HOSTNAME=0
    if [ "$USER" = "root" ] ; then
        PROMPT_NO_HOST='\[\033[1;31m\] (!) \[\033[1;30m\]$NICKNAME\[\033[0m\]'
#    elif [ "$USER" = "root" ] ; then
#        PROMPT_NO_HOST='\[\033[40;1;32m\] =!!> \[\033[1;30m\]$NICKNAME\[\033[0m\]'
#    else
#        PROMPT_NO_HOST='\[\033[40;1;32m\] ==> \[\033[1;30m\]$NICKNAME\[\033[0m\]'
    fi
else
    SHOW_HOSTNAME=1
fi


bad_terms='(linux|eterm-color)'
good_env='(production|master)'


if [[ $TERM =~ $bad_terms ]] ; then
    TERMTITLE=""
else
    export TERM=xterm-256color
    if [ $SHOW_HOSTNAME -eq 1 ] ; then
        TERMTITLE='\[\033]0;\h[\u]:\w\007\]'
    else
        TERMTITLE='\[\033]0;[\u]:\w\007\]'
    fi
fi

TIME='[\D{%T}]'

PROMPT_DIR='\[\033[1;34m\]\w\[\033[0m\]'
if [ -e /etc/bash_completion.d/git ] ;then
    PROMPT_GIT='\[\033[1;35m\]$(__git_ps1)\[\033[0m\]'
    source /etc/bash_completion.d/git
fi

if [ "$USER" = "root" ] ; then
    PROMPT_HOSTNAME='\[\033[1;31m\]\h\[\033[1;30m\]$NICKNAME\[\033[0m\]'
    PROMPT_END='\[\033[0;31m\]☠\[\033[0m\] '
elif [ "$USER" = "xani" ] ; then
    PROMPT_HOSTNAME='\[\033[40;1;32m\]\h\[\033[1;30m\]$NICKNAME\[\033[0m\]'
    PROMPT_END='\[\033[0m\]ᛯ\[\033[0m\] '
else
    PROMPT_HOSTNAME='\[\033[40;1;32m\]\h\[\033[1;30m\]$NICKNAME\[\033[0m\]'
    PROMPT_USER='\[\033[1;36m\]\u\[\033[0m\]@'
    PROMPT_END='\[\033[0m\]ᛯ\[\033[0m\] '
fi

if [ $SHOW_HOSTNAME -eq 0 ] ; then
    PROMPT_HOSTNAME=''
fi
read load </proc/loadavg
# yes ofc bash does not have PCRE things like \d -_-
load_regex='([0-9]+).*'
if [[ $load =~ $load_regex ]] ;then
    SYSTEM_LOAD=${BASH_REMATCH[1]}
fi
no_processors=$(cat /proc/cpuinfo | grep ^processor|wc -l)

if [ $SYSTEM_LOAD -gt $((no_processors * 4)) ] ; then
    SYSTEM_OVERLOAD=1
fi

# fallback default
LOADCOLOR='\[\033[1;30m\]'
get_load_color() {
    read load </proc/loadavg
    if [[ $load =~ $load_regex ]] ;then
        SYSTEM_LOAD=${BASH_REMATCH[1]}
        if [ $SYSTEM_LOAD -lt 1 ] ; then
            LOADCOLOR='\033[1;30m'
        elif [ $SYSTEM_LOAD -lt $no_processors ] ; then
            LOADCOLOR='\033[40;1;32m'
        elif [ $SYSTEM_LOAD -lt $((no_processors * 2)) ] ; then
            LOADCOLOR='\033[1;33m'
        else
            LOADCOLOR='\033[1;31m'
        fi
    fi
    echo -e  $LOADCOLOR
}
PROMPT_LOAD_COLOR='$(get_load_color)'


# get exit status of each command if it's not zero
#
#
export PROMPT_COMMAND="
       _RES=\${PIPESTATUS[*]};
       _RES_STR='';
       _OK=1;
       for res in \$_RES; do
         if [[ ( \$res > 0 ) ]]; then
           _RES_STR=\${_RES// /|};
         fi;
       done;
"
export PROMPT_EXIT_COLOR='\033[1;33m'

export PS1="${TERMTITLE}${PROMPT_NO_HOST}\[${PROMPT_LOAD_COLOR}\]${TIME}${PROMPT_USER}${PROMPT_HOSTNAME}:$PROMPT_DIR${PROMPT_GIT}\[$PROMPT_EXIT_COLOR\]\$_RES_STR${PROMPT_END}"

export PATH="/usr/kerberos/sbin:/usr/kerberos/bin:/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin"

if [ -e /etc/redhat-release ] ; then # yum is yuck
    alias apt-get="yum"
    alias aptitude="yum"
    alias apt-cache="yum"
fi
alias d="if [ -e .svn ] ; then svn diff | colordiff |less -R ; else git diff --word-diff ; fi"
alias g='git'
alias s='svn'
alias svn-addprop="svn propset svn:keywords \"Revision LastChangedBy Date URL\""
alias man="LC_ALL=C man"
alias kj="killall -9 java"
alias ll='ls -l --color=auto'
alias ls='ls --color=auto'
chmod go-rwx ~/.saved >/dev/null 2>&1

disc() {
    if [ "z$1" = "zall" ] ; then
        lshw -short
        free -m -t
    fi
    ip addr show| grep 'inet '
}
export GIT_AUTHOR_NAME='XANi'
export GIT_AUTHOR_EMAIL='xani666@gmail.com'


<% if has_variable?('portable_config') then -%>
# fix another c6 fucktardness
if [ "$SUDO_USER" = "xani" ] ; then
    if [ "$SUDO_COMMAND" != "/bin/su" ]; then
        export HOME=~xani
    fi
fi
export EDITOR=emacs
<% else -%>
export EDITOR='/usr/local/bin/e'
alias emacs='echo use e $@'
alias ytd='youtube-dl -t --console-title'
alias aptitude="sudo aptitude"
export SSH_ASKPASS="/usr/local/bin/ssh-askpass-wrapper"
<%- if scope.lookupvar('home::common::http_proxy') -%>
export http_proxy="<%= scope.lookupvar('home::common::http_proxy') %>"
<%- end -%>

<%- if scope.lookupvar('home::common::https_proxy') -%>
export https_proxy="<%= scope.lookupvar('home::common::https_proxy') %>"
<%- end -%>cd

if [ -e '/usr/local/bin/token-agent.sh' ] ; then
    #configure ssh agent for token, running it from session is for some reason broken
    eval $(/usr/local/bin/token-agent.sh) >/dev/null 2>&1
    alias pin='find ~/.ssh/keys/ -type f -name "*key" -exec ssh-add {} \; ;ssh-add -c -s /usr/lib/opensc-pkcs11.so'
fi

<% end -%>
if [ ! -e /usr/local/bin/e ] && [ ! -e /usr/bin/e ]  ; then
    alias e='emacs'
fi


<% if File.exists?(scope.lookupvar('home::common::homedir') + '/.bash_prompt_custom') %>
<%= scope.function_template([scope.lookupvar('home::common::homedir') + '/.bash_prompt_custom']) %>
<% end %>

export GIT_COMMITTER_NAME=$GIT_AUTHOR_NAME
export GIT_COMMITTER_EMAIL=$GIT_AUTHOR_EMAIL
fi