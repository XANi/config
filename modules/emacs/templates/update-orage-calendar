#!/bin/bash
# <%= @puppet_header %>
# <%=  __FILE__.gsub(/.*?puppet\//,@fqdn + ':') %>
# get toplevel window process
export DISPLAY=:0
EMACS_REGEX='\s*(|/usr/bin/)emacs.*$'
TOP_WINDOW=$(ps h -o args $(xprop -id $(xprop -root -f _NET_ACTIVE_WINDOW 0x " \$0\\n" _NET_ACTIVE_WINDOW | awk "{print \$2}") -f _NET_WM_PID 0c " \$0\\n" _NET_WM_PID | awk "{print \$2}"))

<% if @location == 'arte' %>
SYNCFILE=~/emacs/org/arte.ics
<% else %>
SYNCFILE=~/emacs/org/cal.ics
<% end %>


if [ ! -e $SYNCFILE ]; then
    echo "cal file does not exist, creating"
elif  [ $(find $SYNCFILE -mmin +60 |wc -l) -gt 0 ]   ; then
    echo "cal too old, syncing"
elif [[ $TOP_WINDOW =~ $EMACS_REGEX ]] ; then
    echo "EMACS ON TOP not running calendar tasks"
    exit 0
elif [ ! -e $SYNCFILE ] ; then
    echo "cal $SYNCFILE does not exist, running sync"
elif  [ $(find $SYNCFILE -mmin +30 |wc -l) -gt 0 ]   ; then
    echo "cal too old, syncing"
elif [ $(xprintidle) -lt 60000 ] ; then
    echo "not idle, not running"
    exit 0
else
    echo "TOP window is $TOP_WINDOW - running calendar task"
fi
emacsclient -e '(org-icalendar-combine-agenda-files)'
cd ~/.local/share/orage || exit 0
cp orage.ics orage.ics.b
cp $SYNCFILE orage.ics
killall -HUP orage

# get toplevel window process
TOP_WINDOW=$(ps h -o args $(xprop -id $(xprop -root -f _NET_ACTIVE_WINDOW 0x " \$0\\n" _NET_ACTIVE_WINDOW | awk "{print \$2}") -f _NET_WM_PID 0c " \$0\\n" _NET_WM_PID | awk "{print \$2}"))

if [[ $TOP_WINDOW =~ $EMACS_REGEX ]] ; then
    echo "EMACS ON TOP not running mobile task" |logger
    exit 0
else
    echo "TOP window is $TOP_WINDOW - running mobile task" |logger
fi

if [ -e ~/emacs/org/mobile.org/remote ] ; then
        emacsclient -e '(org-mobile-pull)'
        emacsclient -e '(org-mobile-push)'
fi
